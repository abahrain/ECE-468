// Generated from Micro.g4 by ANTLR 4.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class MicroLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__28=1, T__27=2, T__26=3, T__25=4, T__24=5, T__23=6, T__22=7, T__21=8, 
		T__20=9, T__19=10, T__18=11, T__17=12, T__16=13, T__15=14, T__14=15, T__13=16, 
		T__12=17, T__11=18, T__10=19, T__9=20, T__8=21, T__7=22, T__6=23, T__5=24, 
		T__4=25, T__3=26, T__2=27, T__1=28, T__0=29, KEYWORD=30, IDENTIFIER=31, 
		OPERATOR=32, INTLITERAL=33, FLOATLITERAL=34, STRINGLITERAL=35, SPACE=36, 
		COMMENT=37;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"','", "'-'", "'*'", "'PROGRAM'", "'READ'", "'<'", "'!='", "'END'", "'<='", 
		"'ELSE'", "'ENDIF'", "'VOID'", "'STRING'", "'IF'", "'WRITE'", "'+'", "'WHILE'", 
		"'='", "';'", "'FUNCTION'", "'>'", "'FLOAT'", "':='", "'RETURN'", "'/'", 
		"'BEGIN'", "'>='", "'INT'", "'ENDWHILE'", "KEYWORD", "IDENTIFIER", "OPERATOR", 
		"INTLITERAL", "FLOATLITERAL", "STRINGLITERAL", "SPACE", "COMMENT"
	};
	public static final String[] ruleNames = {
		"T__28", "T__27", "T__26", "T__25", "T__24", "T__23", "T__22", "T__21", 
		"T__20", "T__19", "T__18", "T__17", "T__16", "T__15", "T__14", "T__13", 
		"T__12", "T__11", "T__10", "T__9", "T__8", "T__7", "T__6", "T__5", "T__4", 
		"T__3", "T__2", "T__1", "T__0", "KEYWORD", "IDENTIFIER", "OPERATOR", "INTLITERAL", 
		"FLOATLITERAL", "STRINGLITERAL", "SPACE", "COMMENT"
	};


	public MicroLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Micro.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 35: SPACE_action((RuleContext)_localctx, actionIndex); break;

		case 36: COMMENT_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void COMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 1: skip();  break;
		}
	}
	private void SPACE_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: skip();  break;
		}
	}

	public static final String _serializedATN =
		"\3\uacf5\uee8c\u4f5d\u8b0d\u4a45\u78bd\u1b2f\u3378\2\'\u0169\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3"+
		"\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\b\3\b\3\b\3\t\3\t"+
		"\3\t\3\t\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f"+
		"\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17"+
		"\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22"+
		"\3\23\3\23\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\26"+
		"\3\26\3\27\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\31\3\31\3\31\3\31"+
		"\3\31\3\31\3\31\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34"+
		"\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\37"+
		"\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37"+
		"\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37"+
		"\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37"+
		"\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37"+
		"\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37"+
		"\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37"+
		"\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\5\37\u0129\n\37\3 \3 \7 \u012d"+
		"\n \f \16 \u0130\13 \3!\3!\3!\3!\3!\3!\3!\3!\3!\5!\u013b\n!\3\"\6\"\u013e"+
		"\n\"\r\"\16\"\u013f\3#\7#\u0143\n#\f#\16#\u0146\13#\3#\3#\7#\u014a\n#"+
		"\f#\16#\u014d\13#\3$\3$\7$\u0151\n$\f$\16$\u0154\13$\3$\3$\3%\6%\u0159"+
		"\n%\r%\16%\u015a\3%\3%\3&\3&\3&\3&\7&\u0163\n&\f&\16&\u0166\13&\3&\3&"+
		"\2\'\3\3\1\5\4\1\7\5\1\t\6\1\13\7\1\r\b\1\17\t\1\21\n\1\23\13\1\25\f\1"+
		"\27\r\1\31\16\1\33\17\1\35\20\1\37\21\1!\22\1#\23\1%\24\1\'\25\1)\26\1"+
		"+\27\1-\30\1/\31\1\61\32\1\63\33\1\65\34\1\67\35\19\36\1;\37\1= \1?!\1"+
		"A\"\1C#\1E$\1G%\1I&\2K\'\3\3\2\t\3\2C|\4\2\62;C|\5\2*/\61\61=@\3\2\62"+
		";\4\2))\60\60\4\2\f\f\17\17\5\2\13\f\16\17\"\"\u0184\2\3\3\2\2\2\2\5\3"+
		"\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2"+
		"\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3"+
		"\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'"+
		"\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63"+
		"\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2"+
		"?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3"+
		"\2\2\2\3M\3\2\2\2\5O\3\2\2\2\7Q\3\2\2\2\tS\3\2\2\2\13[\3\2\2\2\r`\3\2"+
		"\2\2\17b\3\2\2\2\21e\3\2\2\2\23i\3\2\2\2\25l\3\2\2\2\27q\3\2\2\2\31w\3"+
		"\2\2\2\33|\3\2\2\2\35\u0083\3\2\2\2\37\u0086\3\2\2\2!\u008c\3\2\2\2#\u008e"+
		"\3\2\2\2%\u0094\3\2\2\2\'\u0096\3\2\2\2)\u0098\3\2\2\2+\u00a1\3\2\2\2"+
		"-\u00a3\3\2\2\2/\u00a9\3\2\2\2\61\u00ac\3\2\2\2\63\u00b3\3\2\2\2\65\u00b5"+
		"\3\2\2\2\67\u00bb\3\2\2\29\u00be\3\2\2\2;\u00c2\3\2\2\2=\u0128\3\2\2\2"+
		"?\u012a\3\2\2\2A\u013a\3\2\2\2C\u013d\3\2\2\2E\u0144\3\2\2\2G\u014e\3"+
		"\2\2\2I\u0158\3\2\2\2K\u015e\3\2\2\2MN\7.\2\2N\4\3\2\2\2OP\7/\2\2P\6\3"+
		"\2\2\2QR\7,\2\2R\b\3\2\2\2ST\7R\2\2TU\7T\2\2UV\7Q\2\2VW\7I\2\2WX\7T\2"+
		"\2XY\7C\2\2YZ\7O\2\2Z\n\3\2\2\2[\\\7T\2\2\\]\7G\2\2]^\7C\2\2^_\7F\2\2"+
		"_\f\3\2\2\2`a\7>\2\2a\16\3\2\2\2bc\7#\2\2cd\7?\2\2d\20\3\2\2\2ef\7G\2"+
		"\2fg\7P\2\2gh\7F\2\2h\22\3\2\2\2ij\7>\2\2jk\7?\2\2k\24\3\2\2\2lm\7G\2"+
		"\2mn\7N\2\2no\7U\2\2op\7G\2\2p\26\3\2\2\2qr\7G\2\2rs\7P\2\2st\7F\2\2t"+
		"u\7K\2\2uv\7H\2\2v\30\3\2\2\2wx\7X\2\2xy\7Q\2\2yz\7K\2\2z{\7F\2\2{\32"+
		"\3\2\2\2|}\7U\2\2}~\7V\2\2~\177\7T\2\2\177\u0080\7K\2\2\u0080\u0081\7"+
		"P\2\2\u0081\u0082\7I\2\2\u0082\34\3\2\2\2\u0083\u0084\7K\2\2\u0084\u0085"+
		"\7H\2\2\u0085\36\3\2\2\2\u0086\u0087\7Y\2\2\u0087\u0088\7T\2\2\u0088\u0089"+
		"\7K\2\2\u0089\u008a\7V\2\2\u008a\u008b\7G\2\2\u008b \3\2\2\2\u008c\u008d"+
		"\7-\2\2\u008d\"\3\2\2\2\u008e\u008f\7Y\2\2\u008f\u0090\7J\2\2\u0090\u0091"+
		"\7K\2\2\u0091\u0092\7N\2\2\u0092\u0093\7G\2\2\u0093$\3\2\2\2\u0094\u0095"+
		"\7?\2\2\u0095&\3\2\2\2\u0096\u0097\7=\2\2\u0097(\3\2\2\2\u0098\u0099\7"+
		"H\2\2\u0099\u009a\7W\2\2\u009a\u009b\7P\2\2\u009b\u009c\7E\2\2\u009c\u009d"+
		"\7V\2\2\u009d\u009e\7K\2\2\u009e\u009f\7Q\2\2\u009f\u00a0\7P\2\2\u00a0"+
		"*\3\2\2\2\u00a1\u00a2\7@\2\2\u00a2,\3\2\2\2\u00a3\u00a4\7H\2\2\u00a4\u00a5"+
		"\7N\2\2\u00a5\u00a6\7Q\2\2\u00a6\u00a7\7C\2\2\u00a7\u00a8\7V\2\2\u00a8"+
		".\3\2\2\2\u00a9\u00aa\7<\2\2\u00aa\u00ab\7?\2\2\u00ab\60\3\2\2\2\u00ac"+
		"\u00ad\7T\2\2\u00ad\u00ae\7G\2\2\u00ae\u00af\7V\2\2\u00af\u00b0\7W\2\2"+
		"\u00b0\u00b1\7T\2\2\u00b1\u00b2\7P\2\2\u00b2\62\3\2\2\2\u00b3\u00b4\7"+
		"\61\2\2\u00b4\64\3\2\2\2\u00b5\u00b6\7D\2\2\u00b6\u00b7\7G\2\2\u00b7\u00b8"+
		"\7I\2\2\u00b8\u00b9\7K\2\2\u00b9\u00ba\7P\2\2\u00ba\66\3\2\2\2\u00bb\u00bc"+
		"\7@\2\2\u00bc\u00bd\7?\2\2\u00bd8\3\2\2\2\u00be\u00bf\7K\2\2\u00bf\u00c0"+
		"\7P\2\2\u00c0\u00c1\7V\2\2\u00c1:\3\2\2\2\u00c2\u00c3\7G\2\2\u00c3\u00c4"+
		"\7P\2\2\u00c4\u00c5\7F\2\2\u00c5\u00c6\7Y\2\2\u00c6\u00c7\7J\2\2\u00c7"+
		"\u00c8\7K\2\2\u00c8\u00c9\7N\2\2\u00c9\u00ca\7G\2\2\u00ca<\3\2\2\2\u00cb"+
		"\u00cc\7R\2\2\u00cc\u00cd\7T\2\2\u00cd\u00ce\7Q\2\2\u00ce\u00cf\7I\2\2"+
		"\u00cf\u00d0\7T\2\2\u00d0\u00d1\7C\2\2\u00d1\u0129\7O\2\2\u00d2\u00d3"+
		"\7D\2\2\u00d3\u00d4\7G\2\2\u00d4\u00d5\7I\2\2\u00d5\u00d6\7K\2\2\u00d6"+
		"\u0129\7P\2\2\u00d7\u00d8\7U\2\2\u00d8\u00d9\7V\2\2\u00d9\u00da\7T\2\2"+
		"\u00da\u00db\7K\2\2\u00db\u00dc\7P\2\2\u00dc\u0129\7I\2\2\u00dd\u00de"+
		"\7H\2\2\u00de\u00df\7W\2\2\u00df\u00e0\7P\2\2\u00e0\u00e1\7E\2\2\u00e1"+
		"\u00e2\7V\2\2\u00e2\u00e3\7K\2\2\u00e3\u00e4\7Q\2\2\u00e4\u0129\7P\2\2"+
		"\u00e5\u00e6\7K\2\2\u00e6\u00e7\7P\2\2\u00e7\u0129\7V\2\2\u00e8\u00e9"+
		"\7K\2\2\u00e9\u0129\7H\2\2\u00ea\u00eb\7T\2\2\u00eb\u00ec\7G\2\2\u00ec"+
		"\u00ed\7V\2\2\u00ed\u00ee\7W\2\2\u00ee\u00ef\7T\2\2\u00ef\u0129\7P\2\2"+
		"\u00f0\u00f1\7G\2\2\u00f1\u00f2\7N\2\2\u00f2\u00f3\7U\2\2\u00f3\u0129"+
		"\7G\2\2\u00f4\u00f5\7G\2\2\u00f5\u00f6\7P\2\2\u00f6\u00f7\7F\2\2\u00f7"+
		"\u00f8\7K\2\2\u00f8\u0129\7H\2\2\u00f9\u00fa\7G\2\2\u00fa\u00fb\7P\2\2"+
		"\u00fb\u0129\7F\2\2\u00fc\u00fd\7X\2\2\u00fd\u00fe\7Q\2\2\u00fe\u00ff"+
		"\7K\2\2\u00ff\u0129\7F\2\2\u0100\u0101\7Y\2\2\u0101\u0102\7T\2\2\u0102"+
		"\u0103\7K\2\2\u0103\u0104\7V\2\2\u0104\u0129\7G\2\2\u0105\u0106\7T\2\2"+
		"\u0106\u0107\7G\2\2\u0107\u0108\7C\2\2\u0108\u0129\7F\2\2\u0109\u010a"+
		"\7Y\2\2\u010a\u010b\7J\2\2\u010b\u010c\7K\2\2\u010c\u010d\7N\2\2\u010d"+
		"\u0129\7G\2\2\u010e\u010f\7G\2\2\u010f\u0110\7P\2\2\u0110\u0111\7F\2\2"+
		"\u0111\u0112\7Y\2\2\u0112\u0113\7J\2\2\u0113\u0114\7K\2\2\u0114\u0115"+
		"\7N\2\2\u0115\u0129\7G\2\2\u0116\u0117\7H\2\2\u0117\u0118\7N\2\2\u0118"+
		"\u0119\7Q\2\2\u0119\u011a\7C\2\2\u011a\u0129\7V\2\2\u011b\u011c\7E\2\2"+
		"\u011c\u011d\7Q\2\2\u011d\u011e\7P\2\2\u011e\u011f\7V\2\2\u011f\u0120"+
		"\7K\2\2\u0120\u0121\7P\2\2\u0121\u0122\7W\2\2\u0122\u0129\7G\2\2\u0123"+
		"\u0124\7D\2\2\u0124\u0125\7T\2\2\u0125\u0126\7G\2\2\u0126\u0127\7C\2\2"+
		"\u0127\u0129\7M\2\2\u0128\u00cb\3\2\2\2\u0128\u00d2\3\2\2\2\u0128\u00d7"+
		"\3\2\2\2\u0128\u00dd\3\2\2\2\u0128\u00e5\3\2\2\2\u0128\u00e8\3\2\2\2\u0128"+
		"\u00ea\3\2\2\2\u0128\u00f0\3\2\2\2\u0128\u00f4\3\2\2\2\u0128\u00f9\3\2"+
		"\2\2\u0128\u00fc\3\2\2\2\u0128\u0100\3\2\2\2\u0128\u0105\3\2\2\2\u0128"+
		"\u0109\3\2\2\2\u0128\u010e\3\2\2\2\u0128\u0116\3\2\2\2\u0128\u011b\3\2"+
		"\2\2\u0128\u0123\3\2\2\2\u0129>\3\2\2\2\u012a\u012e\t\2\2\2\u012b\u012d"+
		"\t\3\2\2\u012c\u012b\3\2\2\2\u012d\u0130\3\2\2\2\u012e\u012c\3\2\2\2\u012e"+
		"\u012f\3\2\2\2\u012f@\3\2\2\2\u0130\u012e\3\2\2\2\u0131\u013b\t\4\2\2"+
		"\u0132\u0133\7<\2\2\u0133\u013b\7?\2\2\u0134\u0135\7#\2\2\u0135\u013b"+
		"\7?\2\2\u0136\u0137\7>\2\2\u0137\u013b\7?\2\2\u0138\u0139\7@\2\2\u0139"+
		"\u013b\7?\2\2\u013a\u0131\3\2\2\2\u013a\u0132\3\2\2\2\u013a\u0134\3\2"+
		"\2\2\u013a\u0136\3\2\2\2\u013a\u0138\3\2\2\2\u013bB\3\2\2\2\u013c\u013e"+
		"\t\5\2\2\u013d\u013c\3\2\2\2\u013e\u013f\3\2\2\2\u013f\u013d\3\2\2\2\u013f"+
		"\u0140\3\2\2\2\u0140D\3\2\2\2\u0141\u0143\t\5\2\2\u0142\u0141\3\2\2\2"+
		"\u0143\u0146\3\2\2\2\u0144\u0142\3\2\2\2\u0144\u0145\3\2\2\2\u0145\u0147"+
		"\3\2\2\2\u0146\u0144\3\2\2\2\u0147\u014b\t\6\2\2\u0148\u014a\t\5\2\2\u0149"+
		"\u0148\3\2\2\2\u014a\u014d\3\2\2\2\u014b\u0149\3\2\2\2\u014b\u014c\3\2"+
		"\2\2\u014cF\3\2\2\2\u014d\u014b\3\2\2\2\u014e\u0152\7$\2\2\u014f\u0151"+
		"\n\7\2\2\u0150\u014f\3\2\2\2\u0151\u0154\3\2\2\2\u0152\u0150\3\2\2\2\u0152"+
		"\u0153\3\2\2\2\u0153\u0155\3\2\2\2\u0154\u0152\3\2\2\2\u0155\u0156\7$"+
		"\2\2\u0156H\3\2\2\2\u0157\u0159\t\b\2\2\u0158\u0157\3\2\2\2\u0159\u015a"+
		"\3\2\2\2\u015a\u0158\3\2\2\2\u015a\u015b\3\2\2\2\u015b\u015c\3\2\2\2\u015c"+
		"\u015d\b%\2\2\u015dJ\3\2\2\2\u015e\u015f\7/\2\2\u015f\u0160\7/\2\2\u0160"+
		"\u0164\3\2\2\2\u0161\u0163\n\7\2\2\u0162\u0161\3\2\2\2\u0163\u0166\3\2"+
		"\2\2\u0164\u0162\3\2\2\2\u0164\u0165\3\2\2\2\u0165\u0167\3\2\2\2\u0166"+
		"\u0164\3\2\2\2\u0167\u0168\b&\3\2\u0168L\3\2\2\2\f\2\u0128\u012e\u013a"+
		"\u013f\u0144\u014b\u0152\u015a\u0164";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}